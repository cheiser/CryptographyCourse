import java.util.Scanner;


public class LagrangeInterpolation {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner s = new Scanner(System.in);
		System.out.println("how many points(x, y) will you enter?:");
		int continues = 1, sum = 0, wantedX = 0, numberOfPoints = s.nextInt();
		double [] x = new double[numberOfPoints + 1];
		double[] y = new double[numberOfPoints + 1];
		for(int i = 0; i < numberOfPoints; i++){
			System.out.println("enter x for point " + (i+1) + ":");
			x[i] = s.nextDouble()
			System.out.println("enter y for point " + (i+1) + ":");
			y[i] = s.nextDouble(); // this is equivalent of f(x)
		}
		
		while(continues == 1){
			System.out.println("enter x you want y for:");
			wantedX = s.nextInt();
			sum = 0;
			
			for(int i = 0; i < numberOfPoints; i++){
				int part = 1;
				
				for(int j = 0; j < numberOfPoints; j++){
					
					if(i != j){
						System.out.println("part(i == " + i + "): " + part);
						System.out.println("((wantedX - x[j]) / (x[i] - x[j])): " + ((wantedX - x[j]) / (x[i] - x[j])));
						part = part * ((wantedX - x[j]) / (x[i] - x[j]));
					}
				}
				
				sum = sum + (y[i] * part);
			}
			
			System.out.println("f(" + wantedX + ") = " + sum);
			System.out.println("do you want to continue? (1 == yes):");
			continues = s.nextInt();
		}
	}

}
